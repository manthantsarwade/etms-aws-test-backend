#version: 0.2
#phases:
#  pre_build:
#    commands:
#      - echo Logging in to Amazon ECR....
#      - aws --version
#      #- $(aws ecr get-login --region ap-south-1 --no-include-email)
#      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 412381779393.dkr.ecr.ap-south-1.amazonaws.com/etms
#      - # Replace with this to your repository URI
#      - REPOSITORY_URI=412381779393.dkr.ecr.ap-south-1.amazonaws.com/etms
#      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
#  build:
#    commands:
#      - echo Build started on `date`
#      - echo building the Jar file
#      - mvn clean install -DskipTests
#      - echo Building the Docker image...
#      - docker build -t $REPOSITORY_URI:latest .
#      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
#  post_build:
#    commands:
#      - echo Build completed on `date`
#      - echo pushing to repo
#      - docker push $REPOSITORY_URI:latest
#      - docker push $REPOSITORY_URI:$IMAGE_TAG
#      - echo Writing image definitions file...
#      # Give your container name
#      - DOCKER_CONTAINER_NAME=spring-demo-ecr
#      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
#      - echo $DOCKER_CONTAINER_NAME
#      - echo printing imagedefinitions.json
#      - cat imagedefinitions.json
#artifacts:
#  files:
#    - imagedefinitions.json
#    - target/springboot-aws-deploy.jar

version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 412381779393.dkr.ecr.ap-south-1.amazonaws.com/etms
      - REPOSITORY_URI=412381779393.dkr.ecr.ap-south-1.amazonaws.com/etms
      - IMAGE_TAG=build-$(date +%Y%m%d%H%M%S)

  build:
    commands:
      - echo Build started on `date`
<<<<<<< HEAD
      - echo Building the JAR file...
      - mvn clean package -DskipTests  # Ensure tests don't block builds
      - echo Building Docker images...
      - docker-compose build
      - docker tag my-spring-app:latest $REPOSITORY_URI:latest
      - docker tag my-spring-app:latest $REPOSITORY_URI:$IMAGE_TAG

=======
      - echo building the Jar file
      - mvn clean install -DskipTests
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
>>>>>>> c9715a7a5b18f169a7dcad7eacc5a5f29057412c
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing images to ECR...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"backend","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
<<<<<<< HEAD
    - target/*.jar
=======
    - target/springboot-aws-deploy.jar
>>>>>>> c9715a7a5b18f169a7dcad7eacc5a5f29057412c
